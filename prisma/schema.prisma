// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthProvider {
  EMAIL
  KAKAO
}

model User {
  id           String         @id @default(uuid())
  nickname     String         @unique
  provider     AuthProvider
  email        String         @unique
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Notification Notification[]
  Review       Review[]
}

enum NotificationType {
  COMMENT
  LIKE
  FOLLOW
}

model Notification {
  id        String           @id @default(uuid())
  actorId   String
  objectId  String
  type      NotificationType
  isRead    Boolean          @default(false)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  user      User             @relation(fields: [userId], references: [id])
  userId    String
}

model Review {
  id         String       @id @default(uuid())
  address    String
  ReviewFile ReviewFile[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  stars      Int
  content    String       @db.VarChar(1000)

  ReviewWith ReviewWith[]
  ReviewTag  ReviewTag[]
}

model ReviewFile {
  id       String @id @default(uuid())
  url      String
  review   Review @relation(fields: [reviewId], references: [id])
  reviewId String
}

model ReviewWith {
  reviewId String
  with     String
  review   Review @relation(fields: [reviewId], references: [id])

  @@id([reviewId, with])
}

model ReviewTag {
  tag      String
  review   Review @relation(fields: [reviewId], references: [id])
  reviewId String

  @@id([tag, reviewId])
}
